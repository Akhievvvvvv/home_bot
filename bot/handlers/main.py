from aiogram import types, Dispatcher
from bot.utils.payments import send_stars_invoice

# ------------------------------
# –°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
# ------------------------------
async def start_command(message: types.Message):
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    
    # –¢–∞—Ä–∏—Ñ—ã
    keyboard.add(
        types.InlineKeyboardButton("üõí 1 –º–µ—Å—è—Ü - 49‚≠êÔ∏è", callback_data="plan_1"),
        types.InlineKeyboardButton("üõí 2 –º–µ—Å—è—Ü–∞ - 89‚≠êÔ∏è", callback_data="plan_2"),
        types.InlineKeyboardButton("üõí 3 –º–µ—Å—è—Ü–∞ - 119‚≠êÔ∏è", callback_data="plan_3")
    )
    
    # –ü—Ä–æ—Ñ–∏–ª—å –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    keyboard.add(
        types.InlineKeyboardButton("üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å", callback_data="profile"),
        types.InlineKeyboardButton("üì± –ú–æ—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è", callback_data="config")
    )
    
    # –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∏ –ø–æ–º–æ—â—å
    keyboard.add(
        types.InlineKeyboardButton("üéÅ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞", callback_data="referral"),
        types.InlineKeyboardButton("‚ùì –ü–æ–º–æ—â—å", callback_data="help")
    )
    
    # –ü–æ–¥–¥–µ—Ä–∂–∫–∞
    keyboard.add(
        types.InlineKeyboardButton("üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="support")
    )
    
    welcome_text = (
        f"üëã –ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n\n"
        "üöÄ –Ø ‚Äî —Ç–≤–æ–π VPN-–±–æ—Ç –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –∏ –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É!\n\n"
        "‚ú® –ß—Ç–æ —è —É–º–µ—é:\n"
        "üõí –ö—É–ø–∏—Ç—å VPN –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 1, 2 –∏–ª–∏ 3 –º–µ—Å—è—Ü–∞ —á–µ—Ä–µ–∑ ‚≠êÔ∏èStars\n"
        "üì± –ü–æ–ª—É—á–∏—Ç—å –≥–æ—Ç–æ–≤—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ WireGuard\n"
        "üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç ‚Äî –æ—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Å–≤–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏\n"
        "üéÅ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ ‚Äî –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ —Å –¥—Ä—É–∑—å—è–º–∏\n"
        "üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ ‚Äî –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏\n\n"
        "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ ‚¨áÔ∏è"
    )
    
    await message.answer(welcome_text, reply_markup=keyboard)


# ------------------------------
# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–∞—Ä–∏—Ñ–æ–≤
# ------------------------------
async def process_plan(callback_query: types.CallbackQuery):
    plan_map = {
        "plan_1": ("1 –º–µ—Å—è—Ü", 49),
        "plan_2": ("2 –º–µ—Å—è—Ü–∞", 89),
        "plan_3": ("3 –º–µ—Å—è—Ü–∞", 119),
    }
    plan_name, price = plan_map[callback_query.data]
    await send_stars_invoice(callback_query.message, plan_name, price)


# ------------------------------
# –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# ------------------------------
async def handle_profile(callback_query: types.CallbackQuery):
    await callback_query.message.answer(
        "üë§ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n"
        "–¢–∞—Ä–∏—Ñ: –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫.\n"
        "–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: ‚Äî"
    )


# ------------------------------
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ VPN
# ------------------------------
async def handle_config(callback_query: types.CallbackQuery):
    await callback_query.message.answer(
        "üì± –ó–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ —Å–∫–∞—á–∞—Ç—å –≤–∞—à–∏ VPN –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏."
    )


# ------------------------------
# –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞
# ------------------------------
async def handle_referral(callback_query: types.CallbackQuery):
    await callback_query.message.answer(
        "üéÅ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞:\n"
        "–û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å—Å—ã–ª–∫—É –¥—Ä—É–∑—å—è–º –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –±–æ–Ω—É—Å—ã."
    )


# ------------------------------
# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –∏ –ø–æ–º–æ—â—å
# ------------------------------
async def handle_help(callback_query: types.CallbackQuery):
    await callback_query.message.answer(
        "‚ùì –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞:\n"
        "1. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ\n"
        "2. –û–ø–ª–∞—Ç–∏—Ç–µ —á–µ—Ä–µ–∑ ‚≠êÔ∏èStars\n"
        "3. –ü–æ–ª—É—á–∏—Ç–µ VPN –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"
    )


# ------------------------------
# –°–≤—è–∑—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
# ------------------------------
async def handle_support(callback_query: types.CallbackQuery):
    await callback_query.message.answer("üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞: @akhievvvvv")


# ------------------------------
# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
# ------------------------------
def register_handlers(dp: Dispatcher):
    dp.register_message_handler(start_command, commands=["start", "buy"])
    dp.register_callback_query_handler(process_plan, lambda c: c.data.startswith("plan_"))
    dp.register_callback_query_handler(handle_profile, lambda c: c.data=="profile")
    dp.register_callback_query_handler(handle_config, lambda c: c.data=="config")
    dp.register_callback_query_handler(handle_referral, lambda c: c.data=="referral")
    dp.register_callback_query_handler(handle_help, lambda c: c.data=="help")
    dp.register_callback_query_handler(handle_support, lambda c: c.data=="support")
